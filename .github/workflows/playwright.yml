name: Playwright Tests
on:
  push:
    branches: [main, master]
  pull_request:
    branches: [main, master]
jobs:
  acceptance_test:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        project: [{ name: chrome, browser: chromium, port: 5002 }]

    env:
      DATABASE_HOST: localhost
      DATABASE_PORT: 5432
      DATABASE_USERNAME: postgres
      DATABASE_PASSWORD: postgres
      DATABASE_NAME: flight_booker_db

    steps:
      - name: Checkout the Backend
        uses: actions/checkout@v3
        with:
          repository: abhi8080/FlightBooker-backend
          ref: master
          path: backend

      - name: Checkout the Frontend
        uses: actions/checkout@v3
        with:
          path: frontend

      - name: Setup Node
        uses: actions/setup-node@v3
        with:
          node-version: 18.x

      - name: Install Backend Dependencies
        run: dotnet restore
        working-directory: ./backend

      - name: Start Backend
        run: dotnet run &
        working-directory: ./backend
        timeout-minutes: 1

      - name: Get installed Playwright version
        id: playwright-version
        run: echo "PLAYWRIGHT_VERSION=$(node -e "console.log(require('./package-lock.json').dependencies['@playwright/test'].version)")" >> $GITHUB_ENV
        working-directory: ./frontend

      - name: Install Frontend Dependencies
        run: npm ci
        working-directory: ./frontend

      # Installs binaries and system dependencies for playwright unless it's found in cache
      - name: Install Playwright Dependencies and Binaries
        run: npx playwright install --with-deps ${{ matrix.project.browser }}
        if: steps.playwright-cache.outputs.cache-hit != 'true'
        working-directory: ./frontend

      # Installs only system dependencies if binaries were cached
      - name: Install Only Playwright Dependencies
        run: npx playwright install-deps ${{ matrix.project.browser }}
        if: steps.playwright-cache.outputs.cache-hit == 'true'
        working-directory: ./frontend

      - name: Run Playwright tests
        run: npx playwright test --project=${{ matrix.project.name }}
        env:
          DEBUG: pw:browser*
        working-directory: ./frontend

      - uses: actions/upload-artifact@v3
        if: always()
        with:
          name: playwright-report
          path: frontend/playwright-report/
          retention-days: 30
